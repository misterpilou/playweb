// Code generated by protoc-gen-go. DO NOT EDIT.
// source: response.proto

package colly

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Parsed struct {
	Nexturl              string    `protobuf:"bytes,1,opt,name=nexturl,proto3" json:"nexturl,omitempty"`
	Res                  *Response `protobuf:"bytes,2,opt,name=res,proto3" json:"res,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Parsed) Reset()         { *m = Parsed{} }
func (m *Parsed) String() string { return proto.CompactTextString(m) }
func (*Parsed) ProtoMessage()    {}
func (*Parsed) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fbc901015fa5021, []int{0}
}

func (m *Parsed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Parsed.Unmarshal(m, b)
}
func (m *Parsed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Parsed.Marshal(b, m, deterministic)
}
func (m *Parsed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Parsed.Merge(m, src)
}
func (m *Parsed) XXX_Size() int {
	return xxx_messageInfo_Parsed.Size(m)
}
func (m *Parsed) XXX_DiscardUnknown() {
	xxx_messageInfo_Parsed.DiscardUnknown(m)
}

var xxx_messageInfo_Parsed proto.InternalMessageInfo

func (m *Parsed) GetNexturl() string {
	if m != nil {
		return m.Nexturl
	}
	return ""
}

func (m *Parsed) GetRes() *Response {
	if m != nil {
		return m.Res
	}
	return nil
}

type Response struct {
	StatusCode           int32               `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	Body                 []byte              `protobuf:"bytes,2,opt,name=Body,proto3" json:"Body,omitempty"`
	Headers              map[string]*Headers `protobuf:"bytes,5,rep,name=Headers,proto3" json:"Headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fbc901015fa5021, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetStatusCode() int32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

func (m *Response) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *Response) GetHeaders() map[string]*Headers {
	if m != nil {
		return m.Headers
	}
	return nil
}

type Headers struct {
	Val                  []string `protobuf:"bytes,1,rep,name=Val,proto3" json:"Val,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Headers) Reset()         { *m = Headers{} }
func (m *Headers) String() string { return proto.CompactTextString(m) }
func (*Headers) ProtoMessage()    {}
func (*Headers) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fbc901015fa5021, []int{2}
}

func (m *Headers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Headers.Unmarshal(m, b)
}
func (m *Headers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Headers.Marshal(b, m, deterministic)
}
func (m *Headers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Headers.Merge(m, src)
}
func (m *Headers) XXX_Size() int {
	return xxx_messageInfo_Headers.Size(m)
}
func (m *Headers) XXX_DiscardUnknown() {
	xxx_messageInfo_Headers.DiscardUnknown(m)
}

var xxx_messageInfo_Headers proto.InternalMessageInfo

func (m *Headers) GetVal() []string {
	if m != nil {
		return m.Val
	}
	return nil
}

func init() {
	proto.RegisterType((*Parsed)(nil), "colly.Parsed")
	proto.RegisterType((*Response)(nil), "colly.Response")
	proto.RegisterMapType((map[string]*Headers)(nil), "colly.Response.HeadersEntry")
	proto.RegisterType((*Headers)(nil), "colly.Headers")
}

func init() { proto.RegisterFile("response.proto", fileDescriptor_0fbc901015fa5021) }

var fileDescriptor_0fbc901015fa5021 = []byte{
	// 262 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0xcf, 0x4a, 0xc4, 0x30,
	0x10, 0x87, 0xcd, 0xd6, 0x6e, 0x75, 0xf6, 0x8f, 0x32, 0xa7, 0xb2, 0x8a, 0xd4, 0xe2, 0xa1, 0xa7,
	0x82, 0x15, 0x44, 0xf4, 0xb6, 0xb2, 0x20, 0x9e, 0x24, 0xc2, 0x1e, 0xbc, 0x45, 0x3b, 0x27, 0x43,
	0xb3, 0x24, 0xa9, 0xd8, 0xd7, 0xf3, 0xc9, 0x24, 0x69, 0xba, 0x2c, 0xbd, 0x4d, 0xe7, 0xd7, 0xf9,
	0x32, 0xf3, 0xc1, 0x52, 0x93, 0xd9, 0xa9, 0xc6, 0x50, 0xb9, 0xd3, 0xca, 0x2a, 0x8c, 0xbf, 0x94,
	0x94, 0x5d, 0xbe, 0x81, 0xe9, 0x9b, 0xd0, 0x86, 0x6a, 0x4c, 0x21, 0x69, 0xe8, 0xd7, 0xb6, 0x5a,
	0xa6, 0x2c, 0x63, 0xc5, 0x29, 0x1f, 0x3e, 0xf1, 0x1a, 0x22, 0x4d, 0x26, 0x9d, 0x64, 0xac, 0x98,
	0x55, 0x67, 0xa5, 0x1f, 0x2c, 0x79, 0xc0, 0x71, 0x97, 0xe5, 0x7f, 0x0c, 0x4e, 0x86, 0x0e, 0x5e,
	0x01, 0xbc, 0x5b, 0x61, 0x5b, 0xf3, 0xac, 0x6a, 0xf2, 0xb0, 0x98, 0x1f, 0x74, 0x10, 0xe1, 0x78,
	0xad, 0xea, 0xce, 0x03, 0xe7, 0xdc, 0xd7, 0x78, 0x0f, 0xc9, 0x0b, 0x89, 0x9a, 0xb4, 0x49, 0xe3,
	0x2c, 0x2a, 0x66, 0xd5, 0xe5, 0xe8, 0x9d, 0x32, 0xc4, 0x9b, 0xc6, 0xea, 0x8e, 0x0f, 0x3f, 0xaf,
	0x5e, 0x61, 0x7e, 0x18, 0xe0, 0x39, 0x44, 0xdf, 0xd4, 0x85, 0x0b, 0x5c, 0x89, 0x37, 0x10, 0xff,
	0x08, 0xd9, 0x52, 0xd8, 0x7f, 0x19, 0xb8, 0x61, 0x8a, 0xf7, 0xe1, 0xe3, 0xe4, 0x81, 0xe5, 0x17,
	0xfb, 0x1d, 0x1c, 0x66, 0x2b, 0x9c, 0x88, 0xc8, 0x61, 0xb6, 0x42, 0x56, 0x4f, 0x41, 0x94, 0xc6,
	0x5b, 0x58, 0xf8, 0x6a, 0x7f, 0xef, 0x58, 0xc9, 0x6a, 0x11, 0x1a, 0xbd, 0xd9, 0xfc, 0x68, 0x9d,
	0x7c, 0xf4, 0xba, 0x3f, 0xa7, 0x5e, 0xfe, 0xdd, 0x7f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa8, 0x80,
	0x69, 0x85, 0x8e, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ParserClient is the client API for Parser service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ParserClient interface {
	ParseResponse(ctx context.Context, in *Response, opts ...grpc.CallOption) (*Parsed, error)
}

type parserClient struct {
	cc *grpc.ClientConn
}

func NewParserClient(cc *grpc.ClientConn) ParserClient {
	return &parserClient{cc}
}

func (c *parserClient) ParseResponse(ctx context.Context, in *Response, opts ...grpc.CallOption) (*Parsed, error) {
	out := new(Parsed)
	err := c.cc.Invoke(ctx, "/colly.Parser/ParseResponse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ParserServer is the server API for Parser service.
type ParserServer interface {
	ParseResponse(context.Context, *Response) (*Parsed, error)
}

// UnimplementedParserServer can be embedded to have forward compatible implementations.
type UnimplementedParserServer struct {
}

func (*UnimplementedParserServer) ParseResponse(ctx context.Context, req *Response) (*Parsed, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ParseResponse not implemented")
}

func RegisterParserServer(s *grpc.Server, srv ParserServer) {
	s.RegisterService(&_Parser_serviceDesc, srv)
}

func _Parser_ParseResponse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Response)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ParserServer).ParseResponse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/colly.Parser/ParseResponse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ParserServer).ParseResponse(ctx, req.(*Response))
	}
	return interceptor(ctx, in, info, handler)
}

var _Parser_serviceDesc = grpc.ServiceDesc{
	ServiceName: "colly.Parser",
	HandlerType: (*ParserServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ParseResponse",
			Handler:    _Parser_ParseResponse_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "response.proto",
}
